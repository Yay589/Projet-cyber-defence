---
- name: Configure Fail2Ban for SSH brute force protection
  hosts: vulnerable_containers
  become: yes
  vars:
    jail_conf_path: "/etc/fail2ban/jail.conf"
    jail_local_path: "/etc/fail2ban/jail.local"
    ban_time: 500
    find_time: 600
    max_retry: 5
    repeat_count: 5
  tasks:
    - name: Install Fail2Ban on Debian-based systems
      apt:
        name: fail2ban
        state: present
      when: ansible_os_family is defined and ansible_os_family == "Debian"
    
    - name: Install Fail2Ban on RHEL-based systems
      yum:
        name: fail2ban
        state: present
      when: ansible_os_family is defined and ansible_os_family == "RedHat"
    
    - name: Ensure default configuration exists
      stat:
        path: "{{ jail_conf_path }}"
      register: jail_conf_exists
    
    - name: Copy default configuration to jail.local
      copy:
        remote_src: yes
        src: "{{ jail_conf_path }}"
        dest: "{{ jail_local_path }}"
      when: jail_conf_exists.stat.exists
      notify: restart fail2ban

    - name: Set enabled in [DEFAULT] section
      lineinfile:
        path: "{{ jail_local_path }}"
        regexp: '^enabled\s*='
        line: "enabled = false"
        insertafter: '^\[DEFAULT\]'
      notify: restart fail2ban

    - name: Set bantime in [DEFAULT] section
      lineinfile:
        path: "{{ jail_local_path }}"
        regexp: '^bantime\s*='
        line: "bantime = {{ ban_time }}"
        insertafter: '^\[DEFAULT\]'
      notify: restart fail2ban

    - name: Set findtime in [DEFAULT] section
      lineinfile:
        path: "{{ jail_local_path }}"
        regexp: '^findtime\s*='
        line: "findtime = {{ find_time }}"
        insertafter: '^\[DEFAULT\]'
      notify: restart fail2ban

    - name: Set maxretry in [DEFAULT] section
      lineinfile:
        path: "{{ jail_local_path }}"
        regexp: '^maxretry\s*='
        line: "maxretry = {{ max_retry }}"
        insertafter: '^\[DEFAULT\]'
      notify: restart fail2ban
    
    - name: Enable SSH protection in jail.local
      lineinfile:
        path: "{{ jail_local_path }}"
        regexp: '^\[sshd\]'
        line: "[sshd]"
        insertafter: EOF
      notify: restart fail2ban
    
    - name: Configure sshd section
      blockinfile:
        path: "{{ jail_local_path }}"
        marker: "# {mark} SSHD CONFIG"
        block: |
          enabled = true
          bantime = {{ ban_time }}
          findtime = {{ find_time }}
          maxretry = {{ max_retry }}
        insertafter: '^\[sshd\]'
      notify: restart fail2ban
    
    - name: Ensure Fail2Ban is running
      service:
        name: fail2ban
        state: started
        enabled: yes
  
  handlers:
    - name: restart fail2ban
      service:
        name: fail2ban
        state: restarted